# Code generated by font_to_py.py.
# Font: Oswald-Heavy.ttf Char set:  %.0123456789Cmp°
# Cmd: font-to-py.py -c 0123456789.pm %°C Oswald-Heavy.ttf 32 oswald32bs.py
version = '0.33'

def height():
    return 32

def baseline():
    return 26

def max_width():
    return 33

def hmap():
    return False

def reverse():
    return False

def monospaced():
    return False

def min_ch():
    return 32

def max_ch():
    return 176

_font =\
b'\x0f\x00\x00\x00\x00\x00\xf8\x01\x00\x00\xfe\x01\x00\x00\xfe\x01'\
b'\x00\x00\xff\x81\xe7\x03\xff\xc0\xe7\x03\x1f\xe1\xe7\x03\x1f\xf8'\
b'\xe7\x03\x3f\xfe\xe7\x03\xff\xff\x00\x00\xfe\x7f\x00\x00\xfe\x3f'\
b'\x00\x00\xfc\x1f\x00\x00\xf8\x07\x00\x00\x00\x00\x00\x00\x08\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x21\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfc\x1f\x00\x00\xfe\x3f'\
b'\x00\x00\xfe\x3f\x00\x00\xff\x7f\x00\x00\x0f\x78\x00\x00\x0f\x78'\
b'\x00\x00\x0f\x78\x00\x00\x1f\x7c\x00\x00\xff\x7f\x00\x00\xfe\x3f'\
b'\x00\x03\xfe\x3f\xe0\x03\xf8\x0f\xfc\x03\x00\x80\xff\x00\x00\xf0'\
b'\x1f\x00\x00\xfe\x03\x00\xe0\x7f\x00\x00\xfc\x0f\x00\x00\xff\xc0'\
b'\x7f\x00\x1f\xf0\xff\x00\x03\xf0\xff\x01\x00\xf8\xff\x03\x00\xf8'\
b'\xff\x03\x00\x78\xc0\x03\x00\x78\xc0\x03\x00\x78\xc0\x03\x00\xf8'\
b'\xff\x03\x00\xf8\xff\x03\x00\xf0\xff\x01\x00\xe0\xff\x00\x00\x80'\
b'\x1f\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\xe0\x03'\
b'\x00\x00\xe0\x03\x00\x00\xe0\x03\x00\x00\xe0\x03\x00\x00\xe0\x03'\
b'\x00\x00\xe0\x03\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\xf8\xff\x7f\x00\xfc\xff\xff\x00\xfe\xff\xff\x01\xfe\xff'\
b'\xff\x01\xff\xff\xff\x03\xff\xff\xff\x03\x1f\x00\xe0\x03\x1f\x00'\
b'\xe0\x03\xff\xff\xff\x03\xff\xff\xff\x03\xfe\xff\xff\x01\xfe\xff'\
b'\xff\x01\xfc\xff\xff\x00\xf0\xff\x3f\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\xf8\x00\x00\x00\x7c\x00\x00\x00\x3c\x00\x00\x00\xfe\xff\xff\x03'\
b'\xff\xff\xff\x03\xff\xff\xff\x03\xff\xff\xff\x03\xff\xff\xff\x03'\
b'\xff\xff\xff\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x12\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\xf0\x01\xe0\x03\xfc\x01\xf8\x03\xfe\x01'\
b'\xfc\x03\xfe\x01\xff\x03\xff\x81\xff\x03\x7f\xe0\xff\x03\x1f\xf0'\
b'\xff\x03\x1f\xfc\xef\x03\x3f\xff\xe3\x03\xff\xff\xe1\x03\xff\x7f'\
b'\xe0\x03\xfe\x3f\xe0\x03\xfc\x0f\xe0\x03\xf8\x07\xe0\x03\xc0\x00'\
b'\x00\x00\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\xf8\x01\x3f\x00\xfc\x01\xff\x00\xfe\x01\xff\x01\xfe\x01\xff\x01'\
b'\xff\x01\xff\x03\xff\x3d\xff\x03\x1f\x3c\xe0\x03\x1f\x3c\xe0\x03'\
b'\xff\xff\xff\x03\xff\xff\xff\x03\xfe\xff\xff\x01\xfe\xff\xff\x01'\
b'\xfc\xf7\xff\x00\xf8\xc3\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x12\x00\x00\x00\x00\x00\x00\x80\x0f\x00\x00\xe0\x0f\x00\x00\xfc'\
b'\x0f\x00\x00\xff\x0f\x00\xe0\x7f\x0f\x00\xf8\x1f\x0f\x00\xfe\x03'\
b'\x0f\x00\x7f\x00\x0f\x00\xff\xff\xff\x03\xff\xff\xff\x03\xff\xff'\
b'\xff\x03\xff\xff\xff\x03\xff\xff\xff\x03\x00\x00\x0f\x00\x00\x00'\
b'\x0f\x00\x00\x00\x0f\x00\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\xfc\x7f\x7c\x00\xff\x7f\xfc\x00\xff\x7f\xfc\x01'\
b'\xff\x7f\xfc\x01\xff\x7f\xfc\x03\x1f\x3e\xfc\x03\x1f\x1e\xc0\x03'\
b'\x1f\x1e\xc0\x03\x1f\x7e\xe0\x03\x1f\xfe\xff\x03\x1f\xfe\xff\x01'\
b'\x1f\xfe\xff\x01\x1f\xfc\xff\x00\x00\xf0\x3f\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf8\xff'\
b'\x3f\x00\xfc\xff\xff\x00\xfe\xff\xff\x01\xfe\xff\xff\x01\xff\xff'\
b'\xff\x03\xff\xff\xff\x03\x0f\x3c\xc0\x03\x0f\x3c\xc0\x03\x7f\xfc'\
b'\xff\x03\x7f\xfc\xff\x03\x7e\xfc\xff\x01\x7e\xfc\xff\x01\x7c\xf8'\
b'\xff\x00\x70\xe0\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x11\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00'\
b'\x0f\x00\x80\x03\x0f\x00\xf8\x03\x0f\x00\xff\x03\x0f\xf0\xff\x03'\
b'\x0f\xff\xff\x03\xff\xff\xff\x03\xff\xff\x3f\x00\xff\xff\x03\x00'\
b'\xff\x7f\x00\x00\xff\x07\x00\x00\x7f\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x06\x00\xf8\xc3'\
b'\x7f\x00\xfc\xe7\xff\x00\xfe\xff\xff\x01\xfe\xff\xff\x01\xff\xff'\
b'\xff\x03\x1f\xff\xe0\x03\x0f\x7c\xc0\x03\x0f\x7c\xc0\x03\xff\xff'\
b'\xff\x03\xff\xff\xff\x03\xfe\xff\xff\x01\xfe\xff\xff\x01\xf8\xe7'\
b'\xff\x00\xc0\x80\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x12\x00'\
b'\x00\x00\x00\x00\xc0\x07\x00\x00\xf8\x3f\x78\x00\xfc\x7f\xf8\x01'\
b'\xfe\xff\xf8\x01\xfe\xff\xf8\x03\xff\xff\xf8\x03\x3f\xfc\xe0\x03'\
b'\x0f\xf0\xc0\x03\x0f\xf0\xc0\x03\xff\xff\xff\x03\xff\xff\xff\x03'\
b'\xfe\xff\xff\x01\xfe\xff\xff\x01\xfc\xff\xff\x00\xf0\xff\x3f\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x00\x00\xf8\x01'\
b'\x00\x00\xfe\x01\x00\x00\xfe\x01\x00\x00\xff\x81\xe7\x03\xff\xc0'\
b'\xe7\x03\x1f\xe1\xe7\x03\x1f\xf8\xe7\x03\x3f\xfe\xe7\x03\xff\xff'\
b'\x00\x00\xfe\x7f\x00\x00\xfe\x3f\x00\x00\xfc\x1f\x00\x00\xf8\x07'\
b'\x00\x00\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\xf0\xff\x3f\x00\xfc\xff\xff\x00\xfe\xff\xff\x01\xfe\xff\xff\x01'\
b'\xff\xff\xff\x03\xff\xff\xff\x03\x0f\x00\xc0\x03\x0f\x00\xc0\x03'\
b'\x0f\x00\xc0\x03\xff\x01\xff\x03\xff\x01\xff\x03\xfe\x01\xff\x01'\
b'\xfe\x01\xff\x01\xfc\x01\xff\x00\xf8\x01\x7f\x00\x00\x00\x00\x00'\
b'\x19\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xff\xff\x03\x80\xff'\
b'\xff\x03\x80\xff\xff\x03\x80\xff\xff\x03\x80\xff\xff\x03\x00\x07'\
b'\x00\x00\x00\x07\x00\x00\x80\x07\x00\x00\x80\xff\xff\x03\x80\xff'\
b'\xff\x03\x80\xff\xff\x03\x80\xff\xff\x03\x00\xff\xff\x03\x00\x07'\
b'\x00\x00\x00\x07\x00\x00\x80\x07\x00\x00\x80\xff\xff\x03\x80\xff'\
b'\xff\x03\x80\xff\xff\x03\x00\xff\xff\x03\x00\xfe\xff\x03\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x80\xff\xff\xff\x80\xff\xff\xff\x80\xff\xff\xff\x80\xff\xff\xff'\
b'\x80\xff\xff\xff\x00\x03\xc0\x00\x00\x03\xc0\x01\x80\x07\xe0\x03'\
b'\x80\xff\xff\x03\x80\xff\xff\x03\x80\xff\xff\x03\x00\xff\xff\x01'\
b'\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x12\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\xe0\x00\x00\x00\xfc\x07\x00\x00\xfe\x0f'\
b'\x00\x00\xfe\x0f\x00\x00\x0f\x1e\x00\x00\x07\x1c\x00\x00\x07\x1c'\
b'\x00\x00\x07\x1c\x00\x00\x07\x1c\x00\x00\x0f\x1e\x00\x00\xfe\x0f'\
b'\x00\x00\xfe\x0f\x00\x00\xfc\x07\x00\x00\xf0\x01\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00'

_sparse =\
b'\x20\x00\x3e\x00\x25\x00\x60\x00\x2e\x00\xe6\x00\x30\x00\x08\x01'\
b'\x31\x00\x52\x01\x32\x00\x9c\x01\x33\x00\xe6\x01\x34\x00\x30\x02'\
b'\x35\x00\x7a\x02\x36\x00\xc4\x02\x37\x00\x0e\x03\x38\x00\x54\x03'\
b'\x39\x00\x9e\x03\x3f\x00\xe8\x03\x43\x00\x26\x04\x6d\x00\x70\x04'\
b'\x70\x00\xd6\x04\xb0\x00\x1c\x05'

_mvfont = memoryview(_font)
_mvsp = memoryview(_sparse)
ifb = lambda l : l[0] | (l[1] << 8)

def bs(lst, val):
    while True:
        m = (len(lst) & ~ 7) >> 1
        v = ifb(lst[m:])
        if v == val:
            return ifb(lst[m + 2:])
        if not m:
            return 0
        lst = lst[m:] if v < val else lst[:m]

def get_ch(ch):
    doff = bs(_mvsp, ord(ch))
    width = ifb(_mvfont[doff : ])

    next_offs = doff + 2 + ((32 - 1)//8 + 1) * width
    return _mvfont[doff + 2:next_offs], 32, width
 
